name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    container: giffon/charleywong_devcontainer_workspace:20210913181056
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Copy libs from /workspace
        run: |
          cp -r /workspace/node_modules .
          cp -r /workspace/lib/dts2hx lib/
      - run: yarn --ignore-optional
      - name: Build tailwind
        run: yarn tailwind
        env:
          NODE_ENV: production
      - name: Build serviceWorker.js
        run: haxe serviceWorker.hxml
      - name: Minify serviceWorker.js
        run: npx browserify serviceWorker.js --transform [ babelify --global ] -g [ envify --NODE_ENV production ] -g uglifyify | npx terser --compress --mangle > static/serviceWorker.bundled.js
      - name: Build browser.js
        run: haxe browser.hxml
      - name: Minify browser.js
        run: npx browserify browser.js -g [ envify --NODE_ENV production ] -g uglifyify | npx terser --compress --mangle > static/browser.bundled.js
      - name: Build server
        run: haxe server.hxml
      - name: Compile Chrome extension
        run: haxe chrome-extension.hxml
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            index.js
            static/serviceWorker.bundled.js
            static/css/tailwind.css
            static/browser.bundled.js
            dclookup.js
            chrome
      - name: Run test
        shell: bash
        run: haxe test.hxml "$GITHUB_EVENT_NAME"
  deploy:
    concurrency: ${{ github.ref }}
    needs: build
    if: success() && github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production' )
    runs-on: ubuntu-latest
    container: giffon/charleywong_devcontainer_workspace:20210913181056
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Copy libs from /workspace
        run: |
          cp -r /workspace/node_modules .
          cp -r /workspace/lib/dts2hx lib/
      - run: yarn --ignore-optional
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Dump HKBASE directory
        run: |
          set -ex
          haxe dumpHkbaseDirectory.hxml
          node dumpHkbaseDirectory.js dump
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
      - name: Dump YellowBlueMap
        run: |
          haxe syncYellowBlueMap.hxml
          node syncYellowBlueMap.js dump
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.YBM_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YBM_AWS_SECRET_ACCESS_KEY }}
      - name: Export entity index
        run: haxe exportEntityIndex.hxml
      - run: ls -lh
      - name: Set Env
        run: |
          set -ex
          if [ "${GITHUB_REF}" = "refs/heads/master" ]; then
            echo "DEPLOY_STAGE=master" >> $GITHUB_ENV
            echo "SERVER_HOST=charleywong-master.giffon.io" >> $GITHUB_ENV
          elif [ "${GITHUB_REF}" = "refs/heads/production" ]; then
            echo "DEPLOY_STAGE=production" >> $GITHUB_ENV
            echo "SERVER_HOST=charleywong.giffon.io" >> $GITHUB_ENV
          fi
      - name: Deploy
        run: npx serverless deploy --stage "${DEPLOY_STAGE}"
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
          FACEBOOK_TOKEN: ${{ secrets.FACEBOOK_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.awsAccessKeyId }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.awsSecretAccessKey }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.serverlessAccessKey }}
      - name: Post-deployment test
        run: haxe test.hxml post-deployment "${SERVER_HOST}"
      - name: Export spreadsheet
        if: github.ref == 'refs/heads/production'
        run: haxe -D CI exportSpreadsheet.hxml
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.googleClientEmail }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.googlePrivateKey }}
